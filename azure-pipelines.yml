trigger:
- master

variables:
  DEPOT_TOOLS_WIN_TOOLCHAIN: '0'
  DEPOT_TOOLS_METRICS: '0'
  PYTHON_HOME: ''
  PDFIUM_REVISION: 'b1e8054bb8b16c37b0cb8b50a7a972bebd97915f'
  PYTHONWARNINGS: 'ignore:DEPRECATION::pip._internal.cli.base_command'
  GCLIENT_PY3: '1'

jobs:
- job: Build_Pdfium
  timeoutInMinutes: 0
  pool:
   vmImage: 'windows-2019'
  steps:
  - powershell: |
      del C:\ProgramData\Chocolatey\bin\pytho*.exe
      Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-infra/depot_tools.zip" -OutFile depot_tools.zip
      &7z x depot_tools.zip -odepot_tools
      Remove-Item depot_tools.zip
      New-Item -Name "x64" -ItemType "directory" 
      New-Item -Name "x86" -ItemType "directory"
      New-Item -Name "lib" -ItemType "directory"
      New-Item -Name "Binaries" -ItemType "directory"
    displayName: 'Fetch depot_tools'
  - script: |
      set PATH=%cd%\depot_tools;%PATH%;
      cd depot_tools
      ./update_depot_tools.bat
      gclient
    displayName: 'Config depot_tools'
  - powershell: |
      $env:Path = "$pwd\depot_tools;" + $env:Path
      gclient config --unmanaged https://pdfium.googlesource.com/pdfium.git
      gclient sync --revision=%PDFIUM_REVISION%
      dir
    displayName: 'Fetch Pdfium repo'
  - script: |
      set PATH=%cd%\depot_tools;%PATH%;
      cd pdfium
    displayName: 'Sync Pdfium deps'
  - powershell: |
      Choco install llvm 2>&1>$null
      $env:Path = "$pwd\depot_tools;" + $env:Path
      python -m pip --disable-pip-version-check install pywin32
      cd pdfium
      gn gen out/Release_32 --args='is_clang=true is_debug=false use_custom_libcxx=true is_component_build=true pdf_is_standalone=true pdf_enable_v8=false pdf_enable_xfa=false pdf_use_skia=false pdf_use_skia_paths=false target_os=\"win\"  target_cpu=\"x86\"' 
      gn gen out/Release_64 --args='is_clang=true is_debug=false use_custom_libcxx=true is_component_build=true pdf_is_standalone=true pdf_enable_v8=false pdf_enable_xfa=false pdf_use_skia=false pdf_use_skia_paths=false target_os=\"win\"  target_cpu=\"x64\"'
    displayName: 'Setup build projects'
  - powershell: |
      $env:Path = "$pwd\depot_tools;" + $env:Path
      &("C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat")
      cd pdfium
      autoninja -C out\Release_32 pdfium
      Copy-Item -Path "out\Release_32\*.lib" -Destination "..\x86" -Recurse 
      Copy-Item -Path "out\Release_32\*.pdb" -Destination "..\x86" -Recurse 
      Copy-Item -Path "out\Release_32\*.exe" -Destination "..\x86" -Recurse 
      Copy-Item -Path "out\Release_32\*.dll" -Destination "..\x86" -Recurse
      Remove-Item -LiteralPath "out\Release_32" -Force -Recurse 
      autoninja -C out\Release_64 pdfium
      Copy-Item -Path "out\Release_64\*.lib" -Destination "..\x64" -Recurse 
      Copy-Item -Path "out\Release_64\*.pdb" -Destination "..\x64" -Recurse 
      Copy-Item -Path "out\Release_64\*.exe" -Destination "..\x64" -Recurse 
      Copy-Item -Path "out\Release_64\*.dll" -Destination "..\x64" -Recurse
      Remove-Item -LiteralPath "out\Release_64" -Force -Recurse  
    displayName: 'Build pdfium'
  - powershell: |
      Move-Item -Path "x64" -Destination "lib"
      Move-Item -Path "x86" -Destination "lib"
      Move-Item -Path "lib" -Destination "Binaries"
      Copy-Item -Path "pdfium\public" -Destination "Binaries" -Recurse 
      7z a $(Build.ArtifactStagingDirectory)\Pdfium.zip Binaries\*
    displayName: 'Copy Binaries'
  - publish: $(Build.ArtifactStagingDirectory)/Pdfium.zip
    artifact: Pdfium Binaries
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'msmshazan''''s Github PAT'
      repositoryName: 'msmshazan/pdfiumbuild'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: 'Release-$(PDFIUM_REVISION)'
      title: 'Pdfium Binaries'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'
      assets: '$(Build.ArtifactStagingDirectory)/Pdfium.zip'
